{"version":3,"sources":["assets/images sync /^/.//.*$","assets/images/bg.png","assets/images/bird.png","assets/images/fg.png","assets/images/pipeNorth.png","assets/images/pipeSouth.png","hooks/useCanvas.tsx","components/Canvas/index.tsx","helpers/index.ts","hooks/useFlappyAnimation.ts","screens/Flappy/style.tsx","screens/Flappy/index.tsx","App.tsx","config/GlobalStyles.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useCanvas","draw","canvasRef","useRef","frameCount","frameId","useEffect","canvas","current","context","getContext","render","window","requestAnimationFrame","cancelAnimationFrame","Canvas","props","onClick","rest","ctx","ref","getAssetImage","fileName","img","Image","src","require","useFlappyAnimation","config","assets","bird","foreground","background","pipeNorth","pipeSouth","options","delayFrameCount","birdX","gap","upMovement","gravity","score","gameOver","isOnTheFloor","delay","birdY","pipesArray","x","y","hitDistance","height","reset","pipeMovement","birdMovementY","scoreTextX","width","scoreTextY","gameOverX","gameOverY","pipes","drawImage","i","length","shift","push","Math","floor","random","hasHitFloor","hasHitPipe","font","fillStyle","fillText","strokeText","Screen","styled","div","Flappy","tap","App","GlobalStyles","createGlobalStyle","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5033fd6.chunk.js","sourcesContent":["var map = {\n\t\"./bg.png\": 19,\n\t\"./bird.png\": 20,\n\t\"./fg.png\": 21,\n\t\"./pipeNorth.png\": 22,\n\t\"./pipeSouth.png\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;","module.exports = __webpack_public_path__ + \"static/media/bg.f97dc14b.png\";","module.exports = __webpack_public_path__ + \"static/media/bird.cab12c37.png\";","module.exports = __webpack_public_path__ + \"static/media/fg.6ecbd537.png\";","module.exports = __webpack_public_path__ + \"static/media/pipeNorth.07cd2335.png\";","module.exports = __webpack_public_path__ + \"static/media/pipeSouth.f7914292.png\";","import { useRef, useEffect } from 'react'\n\ntype DrawProps = (context: CanvasRenderingContext2D, frameCount: number) => void\n\nconst useCanvas = (draw: DrawProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const frameCount = useRef(0)\n  const frameId = useRef(0)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n\n    if (canvas !== null) {\n      const context = canvas.getContext('2d')\n      if (context !== null) {\n        const render = () => {\n          frameCount.current = frameCount.current + 1\n          draw(context, frameCount.current)\n          frameId.current = window.requestAnimationFrame(render)\n        }\n        render()\n      }\n    }\n\n    return () => {\n      window.cancelAnimationFrame(frameId.current)\n    }\n  }, [draw])\n\n  return canvasRef\n}\n\nexport default useCanvas\n","import React from 'react'\nimport useCanvas from '../../hooks/useCanvas'\n\ninterface ICanvas {\n  draw: (() => void) | ((context: CanvasRenderingContext2D, frameCount: number) => void)\n  onClick: (() => void) | ((context: CanvasRenderingContext2D) => void)\n  width: string\n  height: string\n}\n\nconst Canvas: React.FC<ICanvas> = (props) => {\n  const { draw, onClick, ...rest } = props\n  const canvasRef = useCanvas(draw)\n\n  const handleClick = () => {\n    const canvas = canvasRef.current\n    const ctx = canvas !== null ? canvas.getContext('2d') : null\n\n    if (ctx !== null) {\n      onClick(ctx)\n    }\n  }\n\n  return <canvas onClick={handleClick} ref={canvasRef} {...rest} />\n}\n\nexport default Canvas\n","export const getAssetImage = (fileName: string) => {\n  const img = new window.Image()\n  img.src = require(`../assets/images/${fileName}`)\n  return img\n}\n","import { useRef } from 'react'\n\ninterface IConfig {\n  assets: {\n    bird: HTMLImageElement\n    background: HTMLImageElement\n    foreground: HTMLImageElement\n    pipeNorth: HTMLImageElement\n    pipeSouth: HTMLImageElement\n  }\n  options: {\n    delayFrameCount: number\n    birdX: number\n    gap: number\n    upMovement: number\n    gravity: number\n  }\n}\n\nconst useFlappyAnimation = (config: IConfig) => {\n  const { bird, foreground, background, pipeNorth, pipeSouth } = config.assets\n  const { delayFrameCount, birdX, gap, upMovement, gravity } = config.options\n\n  const score = useRef(0)\n  const gameOver = useRef(false)\n  const isOnTheFloor = useRef(false)\n  const delay = useRef(0)\n  const birdY = useRef(150)\n  const pipesArray = useRef([{ x: 288, y: 0 }])\n  const hitDistance = pipeNorth.height + gap + 5\n\n  const tap = () => {\n    if (!gameOver.current) {\n      birdY.current = birdY.current - upMovement\n    } else if (delay.current > delayFrameCount && isOnTheFloor.current) {\n      reset()\n    }\n  }\n\n  const reset = () => {\n    score.current = 0\n    gameOver.current = false\n    birdY.current = 150\n    pipesArray.current = [{ x: 288, y: 0 }]\n  }\n\n  const draw = (context: CanvasRenderingContext2D) => {\n    const canvas = context.canvas\n    const pipeMovement = gameOver.current ? 0 : 1\n    const birdMovementY = (birdY.current + bird.height >= canvas.height - foreground.height + 20) ? 0 : gravity\n    const scoreTextX = canvas.width * 0.45\n    const scoreTextY = canvas.height - 430\n    const gameOverX = canvas.width * 0.07\n    const gameOverY = canvas.height - 300\n    const pipes = pipesArray.current\n\n    context.drawImage(background, 0, 0)\n\n    for (let i = 0; i < pipes.length; i++) {\n      if (pipes[i].x === -60) {\n        pipes.shift()\n      }\n\n      context.drawImage(pipeNorth, pipes[i].x, pipes[i].y)\n      context.drawImage(pipeSouth, pipes[i].x, pipes[i].y + hitDistance)\n\n      pipes[i].x = pipes[i].x - pipeMovement\n\n      if (pipes[i].x === 80 && !gameOver.current) {\n        pipes.push({\n          x: canvas.width,\n          y: Math.floor(Math.random() * pipeNorth.height) - pipeNorth.height\n        })\n      }\n\n      if (pipes[i].x === 0 && !gameOver.current) {\n        score.current = score.current + 1\n      }\n\n      const hasHitFloor = birdY.current + bird.height >= canvas.height - foreground.height + 20\n      const hasHitPipe = birdX + bird.width >= pipes[i].x && birdX <= pipes[i].x + pipeNorth.width &&\n                (birdY.current <= pipes[i].y + pipeNorth.height || birdY.current + bird.height >= pipes[i].y + hitDistance)\n\n      isOnTheFloor.current = hasHitFloor\n\n      if (hasHitPipe || hasHitFloor) {\n        gameOver.current = true\n      }\n\n      context.drawImage(foreground, 0, canvas.height - foreground.height + 20)\n    }\n\n    context.drawImage(bird, birdX, birdY.current)\n    birdY.current = birdY.current + birdMovementY\n\n    if (gameOver.current) {\n      delay.current++\n      context.font = '28px \\'Press Start 2P\\', cursive'\n      context.fillStyle = '#fab900'\n      context.fillText('Game Over', gameOverX, gameOverY)\n      context.fillStyle = 'black'\n      context.strokeText('Game Over', gameOverX, gameOverY)\n\n      if (isOnTheFloor.current) {\n        context.font = 'bold 8px \\'Press Start 2P\\', cursive'\n        context.fillStyle = 'black'\n        context.fillText('Click the screen to play again', gameOverX, gameOverY * 2.2)\n      }\n    }\n\n    context.fillStyle = '#000'\n    context.font = 'bold 32px \\'Press Start 2P\\', cursive'\n    context.strokeText(`${score.current}`, scoreTextX, scoreTextY)\n    context.fillStyle = '#fff'\n    context.fillText(`${score.current}`, scoreTextX, scoreTextY)\n  }\n\n  return [tap, draw]\n}\n\nexport default useFlappyAnimation\n","import styled from 'styled-components'\n\nexport const Screen = styled.div`\n  padding: 1rem;\n  cursor: pointer;\n    & canvas {\n        box-shadow: 0 1px 1px rgba(0,0,0,0.08), \n                    0 2px 2px rgba(0,0,0,0.12), \n                    0 4px 4px rgba(0,0,0,0.16), \n                    0 8px 8px rgba(0,0,0,0.20);\n        border-radius: 8px;\n  }\n`\n","import React from 'react'\nimport Canvas from '../../components/Canvas'\nimport { getAssetImage } from '../../helpers'\nimport useFlappyAnimation from '../../hooks/useFlappyAnimation'\nimport * as S from './style'\n\nconst config = {\n  assets: {\n    bird: getAssetImage('bird.png'),\n    background: getAssetImage('bg.png'),\n    foreground: getAssetImage('fg.png'),\n    pipeNorth: getAssetImage('pipeNorth.png'),\n    pipeSouth: getAssetImage('pipeSouth.png')\n  },\n  options: {\n    delayFrameCount: 5,\n    birdX: 50,\n    gap: 330,\n    upMovement: 40,\n    gravity: 1.5\n  }\n}\n\nconst Flappy: React.FC = () => {\n  const [tap, draw] = useFlappyAnimation(config)\n\n  return (\n    <S.Screen>\n      <Canvas onClick={tap} draw={draw} width=\"288\" height=\"512\"/>\n    </S.Screen>\n  )\n}\n\nexport default Flappy\n","import React from 'react'\nimport Flappy from './screens/Flappy'\n\nfunction App () {\n  return (\n    <Flappy />\n  )\n}\n\nexport default App\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n  body {\n    background-color: #343434;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n  }\n`\n\nexport default GlobalStyles\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport GlobalStyles from './config/GlobalStyles'\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <GlobalStyles />\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}